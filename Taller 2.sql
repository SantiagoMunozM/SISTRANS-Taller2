/*
DROP TABLE CANCIONES_EN_LISTA CASCADE CONSTRAINTS;
DROP TABLE CANCIONES CASCADE CONSTRAINTS;
DROP TABLE ALBUMES CASCADE CONSTRAINTS;
DROP TABLE ARTISTAS CASCADE CONSTRAINTS;
DROP TABLE GENEROS CASCADE CONSTRAINTS;
DROP TABLE TIPOS_MEDIO CASCADE CONSTRAINTS;
DROP TABLE LISTAS_DE_REPRODUCCION CASCADE CONSTRAINTS;
*/

CREATE TABLE ARTISTAS (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(120 BYTE)
);

CREATE TABLE ALBUMES (
    ID NUMBER PRIMARY KEY,
    TITULO VARCHAR2(160 BYTE) NOT NULL,
    ARTISTA_ID NUMBER NOT NULL
);

ALTER TABLE ALBUMES 
ADD CONSTRAINT ALBUMES_ARTISTAS_FK
    FOREIGN KEY (ARTISTA_ID)
    REFERENCES ARTISTAS(ID)
    ENABLE;

CREATE TABLE CANCIONES (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(200 BYTE) NOT NULL,
    COMPOSITOR VARCHAR2(220 BYTE),
    MILISEGUNDOS NUMBER NOT NULL,  
    BYTES NUMBER,  
    PRECIO_UNITARIO NUMBER(10,2) NOT NULL,
    ALBUM_ID NUMBER NOT NULL,
    MEDIO_ID NUMBER NOT NULL,
    GENERO_ID NUMBER NOT NULL
);

CREATE TABLE GENEROS (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(120 BYTE)
);

CREATE TABLE TIPOS_MEDIO (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(120 BYTE)
);

ALTER TABLE CANCIONES
ADD CONSTRAINT CANCIONES_GENEROS_FK
    FOREIGN KEY (GENERO_ID)
    REFERENCES GENEROS (ID) 
    ENABLE;

ALTER TABLE CANCIONES
ADD CONSTRAINT CANCIONES_ALBUMES_FK
    FOREIGN KEY (ALBUM_ID)
    REFERENCES ALBUMES (ID) 
    ENABLE;

ALTER TABLE CANCIONES
ADD CONSTRAINT CANCIONES_MEDIOS_FK
    FOREIGN KEY (MEDIO_ID)
    REFERENCES TIPOS_MEDIO (ID) 
    ENABLE;

CREATE TABLE LISTAS_DE_REPRODUCCION (
    ID NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(120 BYTE)
);

CREATE TABLE CANCIONES_EN_LISTA (
    LISTA_ID NUMBER,
    CANCION_ID NUMBER,
    CONSTRAINT CANCIONES_EN_LISTA_PK PRIMARY KEY (LISTA_ID, CANCION_ID)
);

ALTER TABLE CANCIONES_EN_LISTA
ADD CONSTRAINT CANCIONES_EN_LISTA_CANCIONES
    FOREIGN KEY (CANCION_ID)
    REFERENCES CANCIONES (ID)
    ENABLE;

ALTER TABLE CANCIONES_EN_LISTA
ADD CONSTRAINT CANCIONES_EN_LISTA_LISTAS_DE_REPRODUCCION
    FOREIGN KEY (LISTA_ID)
    REFERENCES LISTAS_DE_REPRODUCCION (ID)
    ENABLE;
-- Primera consulta
SELECT  LISTAS_DE_REPRODUCCION.ID, LISTAS_DE_REPRODUCCION.NOMBRE, NVL(SUM(CANCIONES.PRECIO_UNITARIO), 0) AS PRECIO_TOTAL
FROM LISTAS_DE_REPRODUCCION 
LEFT JOIN CANCIONES_EN_LISTA 
       ON CANCIONES_EN_LISTA.LISTA_ID = LISTAS_DE_REPRODUCCION.ID
LEFT JOIN CANCIONES 
       ON CANCIONES.ID = CANCIONES_EN_LISTA.CANCION_ID
GROUP BY LISTAS_DE_REPRODUCCION.ID, LISTAS_DE_REPRODUCCION.NOMBRE
ORDER BY PRECIO_TOTAL DESC
FETCH FIRST 3 ROWS ONLY;
--Segunda consulta
SELECT CANCIONES.*
FROM CANCIONES
LEFT JOIN CANCIONES_EN_LISTA
    ON CANCIONES_EN_LISTA.CANCION_ID = CANCIONES.ID 
JOIN TIPOS_MEDIO
    ON TIPOS_MEDIO.ID = CANCIONES.MEDIO_ID
WHERE CANCIONES_EN_LISTA.LISTA_ID IS NULL AND TIPOS_MEDIO.NOMBRE = 'AAC audio file';

--Tercera consulta

SELECT ARTISTAS.NOMBRE, COUNT(DISTINCT ALBUMES.ID) AS cantidad_albumes, AVG(CANCIONES.PRECIO_UNITARIO)
FROM ARTISTAS
LEFT JOIN ALBUMES
    ON ALBUMES.ARTISTA_ID = ARTISTAS.ID
LEFT JOIN CANCIONES
    ON CANCIONES.ALBUM_ID = ALBUMES.ID
GROUP BY ARTISTAS.NOMBRE
HAVING COUNT( DISTINCT ALBUMES.ID)>=5
ORDER BY COUNT(DISTINCT ALBUMES.ID) DESC, AVG(CANCIONES.PRECIO_UNITARIO) DESC;

